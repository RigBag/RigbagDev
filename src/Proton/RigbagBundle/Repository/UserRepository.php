<?php

namespace Proton\RigbagBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
	
	public function search( $q, $params = array() )
	{
		extract( $params );
		if( isset( $circles ) && is_array( $circles ) && !count( $circles ) ) {
			return array();
		}
		
		$qb	= $this->createQueryBuilder('u');
		
		// QUERY
		$exp	= 	'(' . $qb->expr()->like( 'u.name', ':q1' );
		$exp	.= 	' OR ' . $qb->expr()->like( 'u.location', ':q2' ) . ')';
		$query 	= $qb->where( $exp );
		$query->setParameter( 'q1', '%' . $q . '%' );
		$query->setParameter( 'q2', '%' . $q . '%' );
		
		// CIRCLES
		if( isset( $circles ) && is_array( $circles ) && count( $circles ) ) {
			$query->join( 'u.circles', 'c' );
			$query->andWhere( 'c.id IN (:circlesIds)' );
			$query->setParameter( 'circlesIds', implode( ',', $circles ) );
		}

		if (isset($orderby)) {
			$query->addOrderBy($orderby, (isset($orderdir) ? $orderdir : 'ASC'));		
		}
		// EXECUTE
		$query->addOrderBy('u.name', 'ASC');
		
		return $query->getQuery()->getResult();
	}
        
          public function PaymentMode($user ) {

		$query	= $this->createQueryBuilder('u');
                $query->select('u.account_type')
                ->where( 'u.id=:id' )
				->setParameter( 'id', $user );
		$query = $query->getQuery();
                $rs =$query->getResult();
		if($rs[0]['account_type'] =='annual') {
                    return 1;
                } else
                {
                    return 0;
                }

}
}
